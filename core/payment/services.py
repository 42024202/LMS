import time
import random
from django.utils import timezone


class MockPaymentGateway:
    """–ü—Ä–æ—Å—Ç–∞—è —Å–∏–º—É–ª—è—Ü–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ —à–ª—é–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""

    def process_payment(self, payment):
        """–°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–ª–∞—Ç–µ–∂–∞"""
        print(f"üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂ {payment.id} –Ω–∞ —Å—É–º–º—É {payment.amount}...")

        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ (2-5 —Å–µ–∫—É–Ω–¥)
        processing_time = random.uniform(2.0, 5.0)
        time.sleep(processing_time)

        # 80% —à–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞, 20% - –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ
        if random.random() < 0.8:
            payment.status = 'completed'
            payment.confirmed_at = timezone.now()
            payment.save()
            print(f"‚úÖ –ü–ª–∞—Ç–µ–∂ {payment.id} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            return True
        else:
            payment.status = 'failed'
            payment.save()
            print(f"‚ùå –ü–ª–∞—Ç–µ–∂ {payment.id} –Ω–µ –ø—Ä–æ—à–µ–ª!")
            return False

    def get_payment_status(self, payment):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞"""
        status_messages = {
            'pending': '–û–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏',
            'completed': '–£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω',
            'failed': '–ù–µ —É–¥–∞–ª—Å—è',
            'refunded': '–í–æ–∑–≤—Ä–∞—â–µ–Ω'
        }
        return status_messages.get(payment.status, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å')